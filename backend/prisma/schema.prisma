// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int @id       @default(autoincrement())
  username        String        @unique
  password        String?
  id42            Int?          @unique
  access_token42  String?       @unique
  avatar_url      String
  tfa_enabled     Boolean       @default(false)

  invitations_sent        FriendshipInvitation[]	@relation("from_user")
  invitations_received    FriendshipInvitation[]	@relation("to_user")
  friends_added           User[]                  @relation("Friendship")
  friends                 User[]                  @relation("Friendship")
  blocked_users           User[]                  @relation("Block")
  blocked_by              User[]                  @relation("Block")

  tfa_email_address       String?
  tfa_registration        TfaRegistration?        @relation("tfa_registration")
  tfa_request             TfaRequest[]            @relation("tfa_request")
  
  games Game[]
}

model FriendshipInvitation {
  from   User @relation(name: "from_user", fields: [fromId], references: [id])
  fromId Int
  to     User @relation(name: "to_user", fields: [toId], references: [id])
  toId   Int

  @@id([fromId, toId])
}

enum TfaRegistrationType {
  ENABLE
  DISABLE
}

model TfaRegistration {
  userId  Int     @id
  user    User    @relation(name: "tfa_registration", fields: [userId], references: [id])
  email   String
  code    String
  time    DateTime @default(now())
  type    TfaRegistrationType @default(ENABLE)
}

model TfaRequest {
  id      String    @id @default(uuid())
  userId  Int
  user    User      @relation(name: "tfa_request", fields: [userId], references: [id])
  code    String
  time    DateTime  @default(now())
}

model Game {
  id            Int      @id @default(autoincrement())
  date          DateTime @default(now())
  initiatedBy   User     @relation(fields: [initiatedById], references: [id])
  initiatedById Int
  completed     Boolean  @default(false)

  @@unique([date, initiatedById])
}
